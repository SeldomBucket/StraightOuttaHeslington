package com.mygdx.game;

import java.lang.reflect.Array;
import java.util.Arrays;

/**
 * Manages the equipables currently equipped to an agent.
 * Stores the ID of the currently equipped equipable in the relevant variable.
 * Can only have one of each type of equipable equipped at once.
 */
public class CurrentEquipment {

    public int[] equipSlots = new int[5]; //Stores equipped equipables in order: head, chest, feet, accessory, weapon
    private int[] totalStatModifiers = new int[5]; //Ordered: speed, strength, dexterity, intelligence, armourVal


    @Override
    public String toString() {
        return "CurrentEquipment{" +
                "equipSlots=" + Arrays.toString(equipSlots) +
                '}';
    }

    public CurrentEquipment(int head, int chest, int feet, int accessory, int weapon) {

        equipSlots[0] = head;
        equipSlots[1] = chest;
        equipSlots[2] = feet;
        equipSlots[3] = accessory;
        equipSlots[4] = weapon;

        totalStatModifiers=calculateTotalStatModifiers();
    }
    /**
     * Empty constructor required for class to be generated by deserialising json.
     */
    public CurrentEquipment(){};

    /**
     * CHANGE- function returns the equipment corresponding to slotNumber
     * @param slotNumber
     * @return
     */
    public int getEquipment(int slotNumber) {
        return equipSlots[slotNumber];
    }

    //Gets the total modifiers by summing the modifiers of each piece of equipped equipment
    private int[] calculateTotalStatModifiers(){
        int[][] totalStatModifiersPerItem= new int[5][5];//2x2 array that stores the total stats of each item on its own row

        for(int i=0; i<5; i++){
            totalStatModifiersPerItem[i] = Game.items.getEquipable(equipSlots[i]).getModifiers();
        }

        int[] totalStatModifiers = new int[5];


        for(int column = 0; column<5; column++){
            for(int row = 0; row<5; row++) {
                totalStatModifiers[column]+=totalStatModifiersPerItem[row][column];
            }
        }
        return totalStatModifiers;
    }

    //Equip item and remove from inventory
    public void equip(int index){
        Equipable item = Game.items.getEquipable(Game.party.getEquipables().get(index));
        int id = item.getID();
        switch (item.getType()){
            case HEAD:{
                equipSlots[0] = id;
                break;
            }
            case CHEST:{
                equipSlots[1] = id;
                break;
            }
            case FEET:{
                equipSlots[2] = id;
                break;
            }
            case ACCESSORY:{
                equipSlots[3] = id;
                break;
            }
            case WEAPON:{
                equipSlots[4] = id;
                break;
            }
        }
        Game.party.getEquipables().remove(index);
        totalStatModifiers=calculateTotalStatModifiers();
    }
    //Add item to inventory then unequip
    public void unequip(int index) {
        int id = Game.items.getEquipable(equipSlots[index]).getID();
        equipSlots[index] = 0;
        Game.party.getEquipables().add(id);
        totalStatModifiers=calculateTotalStatModifiers();
    }

    /**
     * @return int array of total stat modifiers from currently equipped equipment in order: speed, strength, dexterity, intelligence, armourVal
     */
    public int[] getTotalStatModifiers() {
        return totalStatModifiers;
    }

    public int getTotalSpeedModifiers() {
        return totalStatModifiers[0];
    }
    public int getTotalStrengthModifiers() {
        return totalStatModifiers[1];
    }
    public int getTotalDexterityModifiers() {
        return totalStatModifiers[2];
    }
    public int getTotalIntelligenceModifiers() {
        return totalStatModifiers[3];
    }
    public int getTotalArmourValModifiers() {
        return totalStatModifiers[4];
    }
}
